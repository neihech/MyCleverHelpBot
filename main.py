import json
import os
from aiohttp import web
from datetime import datetime
from aiogram import Bot, Dispatcher, F, Router
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.filters import CommandStart, StateFilter
import asyncio
from dotenv import load_dotenv
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
PORT = int(os.getenv("PORT", 8080))
router = Router()
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = int(os.getenv("CHANNEL_ID"))
REVIEWS_CHANNEL = int(os.getenv("REVIEWS_CHANNEL"))
ADMINS_CHANNEL = int(os.getenv("ADMINS_CHANNEL"))
SUPPORT_GROUP_ID = int(os.getenv("SUPPORT_GROUP_ID"))


bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# --- –ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
USER_DB = "users.json"
def load_users():
    return json.load(open(USER_DB, encoding="utf-8")) if os.path.exists(USER_DB) else {}
def save_users(data):
    json.dump(data, open(USER_DB, "w", encoding="utf-8"), ensure_ascii=False, indent=2)
users = load_users()

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è ---
class Reg(StatesGroup):
    name = State()
    age = State()

class Feedback(StatesGroup):
    waiting_for_text = State()

class AdminForm(StatesGroup):
    username = State()
    age = State()
    time_commitment = State()
    timezone = State()
    experience = State()
    motivation = State()
    conflict = State()
    ideas = State()
    strengths = State()

class ChatStates(StatesGroup):
    chatting = State()

class AdminChatStates(StatesGroup):
    waiting_user_message_to_admin = State()

user_message_map = {}
# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def get_main_menu():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üë• –ü—Ä–æ—Ñ–∏–ª—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")],
            [KeyboardButton(text="üìò –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"), KeyboardButton(text="‚úâÔ∏è –†–∞–∑–¥–µ–ª –û—Ç–∑—ã–≤–æ–≤")],
            [KeyboardButton(text="üéüÔ∏è –°—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º"), KeyboardButton(text="üåê –û–±—â–∞—Ç—å—Å—è —Å –ê–ª—å—è–Ω—Å–æ–º")]
        ],
        resize_keyboard=True
    )

@dp.message(CommandStart())
async def start(message: Message, state: FSMContext):
    user_id = str(message.from_user.id)
    if user_id in users:
        await show_main_menu(message, state)
        return
    await state.clear()
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–ª—å—è–Ω—Å –°–≤–æ–±–æ–¥—ã. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await state.set_state(Reg.name)

@dp.message(Reg.name)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    await state.set_state(Reg.age)

@dp.message(Reg.age)
async def get_age(message: Message, state: FSMContext):
    data = await state.get_data()
    user_id = str(message.from_user.id)
    users[user_id] = {
        "username": message.from_user.username,
        "name": data["name"],
        "age": message.text,
        "joined": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "reputation": {"+": 0, "-": 0},
        "messages": 0
    }
    save_users(users)
    try:
        photo = FSInputFile("menu.jpg")
        await message.answer_photo(photo, caption=(
            "üåå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–ª—å—è–Ω—Å –°–≤–æ–±–æ–¥—ã. –ó–¥–µ—Å—å –Ω–µ—Ç –æ–∫–æ–≤, –Ω–µ—Ç –¥–∞–≤–ª–µ–Ω–∏—è ‚Äî —Ç–æ–ª—å–∫–æ –ª—ë–≥–∫–∏–π –≤–æ–∑–¥—É—Ö –∏ —Ç—ë–ø–ª–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –±—ã—Ç—å —Å–æ–±–æ–π. üïäÔ∏è\n\n"
            "‚ï≠‚îÄ‚ï¥üß© –ó–¥–µ—Å—å –º–æ–∂–Ω–æ:\n"
            "‚Ä¢ ‚ú¶ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã –±–µ–∑ –º–∞—Å–æ–∫, –±–µ–∑ –ø—Ä–µ–≥—Ä–∞–¥, –Ω–µ –∏—â–∞ —Å–ª–æ–∂–Ω—ã—Ö –ø—É—Ç–µ–π\n"
            "‚Ä¢ ‚ú¶ –≤—ã–¥–æ—Ö–Ω—É—Ç—å‚Ä¶ –∏ –±—ã—Ç—å —É—Å–ª—ã—à–∞–Ω–Ω—ã–º, –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É\n"
            "‚Ä¢ ‚ú¶ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å: —Ç—ã –Ω–µ –æ–¥–∏–Ω –∏ —ç—Ç–æ –±–æ–ª—å—à–µ, —á–µ–º –ø—Ä–æ—Å—Ç–æ —Å–ª–æ–≤–∞\n"
            "‚ú¶ –ø–æ–ª—É—á–∏—Ç—å —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ –º–æ–∂–µ—Ç, –ø–æ–¥–¥–µ—Ä–∂–∫—É‚Ä¶ –∞ –º–æ–∂–µ—Ç, –ø—Ä–æ—Å—Ç–æ —Ç—ë–ø–ª–æ–µ, –ª—ë–≥–∫–æ–µ –æ–±—â–µ–Ω–∏–µ\n"
            "‚ï∞‚îÄ‚ï¥üí´ –ò –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ –ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É, —Ç–æ –ª–∏ –ø—Ä–∏—è—Ç–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ\n\n"
            "üí´ –ú—ã —Ä—è–¥–æ–º. –ú—è–≥–∫–æ, –±–µ—Ä–µ–∂–Ω–æ, –±–µ–∑ –≥—Ä–æ–º–∫–∏—Ö —Å–ª–æ–≤. –í —ç—Ç–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ —Ç–µ–±—è –ø—Ä–∏–º—É—Ç —Ç–∞–∫–∏–º, –∫–∞–∫–æ–π —Ç—ã –µ—Å—Ç—å. –¢—ã –¥–æ–º–∞, –∑–≤—ë–∑–¥–Ω—ã–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫. ‚ú®"
        ))
    except:
        await message.answer()
    await message.answer("‚ü° –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –∏ —à–∞–≥–Ω–∏ –≤ —Å–≤–æ–±–æ–¥—É. –ú—ã –∂–¥—ë–º —Ç–µ–±—è. ‚á£", reply_markup=ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚ñ∂Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]],
        resize_keyboard=True
    ))
    await state.clear()

@dp.message(F.text == "‚ñ∂Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def show_main_menu(message: Message, state: FSMContext):
    await state.clear()
    try:
        photo = FSInputFile("welcome.jpg")
        await message.answer_photo(photo, caption=(
            "üåå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî –ê–ª—å—è–Ω—Å –°–≤–æ–±–æ–¥—ã\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
            "ñ§ê –ü—Ä–æ—Ñ–∏–ª—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n —Ç–≤–æ—è –ª–∏—á–Ω–∞—è —Ç–æ—á–∫–∞ –æ—Ç—Å—á—ë—Ç–∞. –≤—Å—ë –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–µ–±—è.\n"
            "ñ§ê –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è \n –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–ø—É—Ç–∞–ª–æ—Å—å ‚Äî –∑–∞–≥–ª—è–Ω–∏ —Å—é–¥–∞. –≤—Å—ë –ø—Ä–æ—Å—Ç–æ.\n"
            "ñ§ê –†–∞–∑–¥–µ–ª –û—Ç–∑—ã–≤–æ–≤ \n —Å–∫–∞–∂–∏, —á—Ç–æ —á—É–≤—Å—Ç–≤—É–µ—à—å. –Ω–∞–º –≤–∞–∂–Ω–æ —Å–ª—ã—à–∞—Ç—å —Ç–µ–±—è.\n"
            "ñ§ê –°—Ç–∞—Ç—å –ê–¥–º–∏–Ω–æ–º \n –æ—Ç–∫—Ä—ã—Ç–∞—è –¥–≤–µ—Ä—å –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –¥–µ–ª–∞—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –ª—É—á—à–µ.\n"
            "ñ§ê –ê–∫—Ç–∏–≤–Ω—ã–µ –ê–¥–º–∏–Ω—á–∏–∫–∏ \n —Ç–µ, –∫—Ç–æ —Å–µ–π—á–∞—Å —Ä—è–¥–æ–º. –Ω–∞ —Å–≤—è–∑–∏.\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
            "‚ãÜ‚Å∫‚Çä‚ãÜ ‚òÅÔ∏è ‚ãÜ‚Å∫‚Çä‚ãÜ \n –°–ø–æ–∫–æ–π–Ω–æ. –¢—ã –≤ –ê–ª—å—è–Ω—Å–µ. –í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç."
        ))
    except:
        await message.answer()
    await message.answer("–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:", reply_markup=get_main_menu())
# --- –ü—Ä–æ—Ñ–∏–ª—å ---
@dp.message(F.text == "üë• –ü—Ä–æ—Ñ–∏–ª—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def profile(message: Message, state: FSMContext):
    await state.clear()
    user_id = str(message.from_user.id)
    user = users.get(user_id)
    if not user:
        return await message.answer("–¢—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")

    username = f"@{user.get('username') or '–ë–µ–∑ –Ω–∏–∫–∞'}"
    rep = user.get("reputation", {"+": 0, "-": 0})
    joined = user.get("joined", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    msg_count = user.get("messages", 0)

    await message.answer(
        "üå´Ô∏èñ¶π –õ–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ ‚Äî –ê–ª—å—è–Ω—Å –°–≤–æ–±–æ–¥—ã\n"
        "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ãÜÀö‚Çä‚ùÑÔ∏è‚ãÜ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ \n"
        f"‚ü° –ü–æ–∑—ã–≤–Ω–æ–π: {username}\n"
        f"‚ü° –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {msg_count}\n"
        f"‚ü° –° –Ω–∞–º–∏ —Å: {joined}\n"
        f"‚ü° –†–µ–ø—É—Ç–∞—Ü–∏—è: +{rep.get('+',0)} / -{rep.get('-',0)}\n"
        f"‚ü° ID: {user_id}\n\n"
        "‚ü° –ü–æ–¥–∞—Ä–∫–∏: –ø–æ–∫–∞ –ø—É—Å—Ç–æ ‚Äî –Ω–æ —ç—Ç–æ –ª–∏—à—å –Ω–∞—á–∞–ª–æ \n"
        "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ãÜÀö‚Çä‚úß‚ãÜ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"
    )

# --- –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ---
@dp.message(F.text == "üìò –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
async def user_guide(message: Message, state: FSMContext):
    await state.clear()
    try:
        photo = FSInputFile("guide.jpg")
        await message.answer_photo(
            photo,
            caption=(
                "üìñ <b>‚ú¶Àö‚Çä‚Äß‚Çäüåå –ê–ª—å—è–Ω—Å –°–≤–æ–±–æ–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è ‚Çä‚Äß‚ÇäÀö‚ú¶</b>\n\n"
                "–¢—ã –æ–∫–∞–∑–∞–ª—Å—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –≥–¥–µ —à—É–º —Å—Ç–∏—Ö–∞—é—Ç, –∞ –ª—é–¥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–∏–º–∏.\n"
                "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã—Ç—å. –ù–µ –∫–∞–∑–∞—Ç—å—Å—è. –ù–µ —Ç–æ—Ä–æ–ø–∏—Ç—å—Å—è. –ü—Ä–æ—Å—Ç–æ ‚Äî –±—ã—Ç—å. \n \n "
                "‚ï≠‚îÄ‚îÄ ‚äπÀö‚Çäñ§ê –ß—Ç–æ –∑–¥–µ—Å—å –≤–∞–∂–Ω–æ ñ§ê‚ÇäÀö‚äπ ‚îÄ‚îÄ‚ïÆ\n"
                "‚ü° –°–ø–æ–∫–æ–π–Ω–æ–µ, –±–µ—Ä–µ–∂–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ\n"
                "‚ü° –ò—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –±–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è\n"
                "‚ü° –£–≤–∞–∂–µ–Ω–∏–µ –∫ —Å–µ–±–µ –∏ –¥—Ä—É–≥–∏–º \n"
                "‚ü° –¢–∏—à–∏–Ω–∞, –∫–æ–≥–¥–∞ –æ–Ω–∞ –Ω—É–∂–Ω–∞ \n"
                "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ \n \n"
                "‚ï≠‚îÄ‚îÄ ‚äπÀö‚Çä‚ö†Ô∏è –ê —ç—Ç–æ ‚Äî –Ω–µ –Ω–∞—à–µ ‚ö†Ô∏è‚ÇäÀö‚äπ ‚îÄ‚îÄ‚ïÆ \n"
                "‚úó –†–µ–∑–∫–æ—Å—Ç—å, –≥—Ä—É–±–æ—Å—Ç—å, —Å–ø–∞–º \n"
                "‚úó –¢–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–Ω—è—Ç \n"
                "‚úó –ü—Ä–∏–Ω—É–∂–¥–µ–Ω–∏–µ –∫ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç–∏ \n"
                "‚úó –ò–≥—Ä—ã —Å —á—É–∂–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏ \n"
                "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ \n \n"
                "‚òÅÔ∏è –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç —Å—Ä–∞–∑—É ‚Äî –Ω–µ –ø—É–≥–∞–π—Å—è. \n"
                "–ó–Ω–∞—á–∏—Ç, –∫—Ç–æ-—Ç–æ –æ—Ç–¥—ã—Ö–∞–µ—Ç, –∞ –∫—Ç–æ-—Ç–æ –≤ –ø—É—Ç–∏. \n "
                "–¢—ã –Ω–µ –æ–¥–∏–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ. \n \n"
                "ñ¶π –¢—ã –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–º. \n"
                "–ú–æ–∂–Ω–æ –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º ‚Äî —É—Å—Ç–∞–≤—à–∏–º, –≤–µ—Å—ë–ª—ã–º, –º–æ–ª—á–∞–ª–∏–≤—ã–º. \n"
                "–ì–ª–∞–≤–Ω–æ–µ ‚Äî –±—É–¥—å —Å–æ–±–æ–π. \n \n"
                "ÀóÀèÀã üïäÔ∏è ÀéÀäÀó \n"
                "–¢—ã –∑–¥–µ—Å—å –Ω–µ —Å–ª—É—á–∞–π–Ω–æ. \n"
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π."
            )
        )
    except:
        await message.answer()

    kb = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚¨ÖÔ∏è –í—ã–π—Ç–∏")]],
        resize_keyboard=True
    )
    await message.answer("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=kb)

@dp.message(F.text == "‚¨ÖÔ∏è –í—ã–π—Ç–∏")
async def exit_to_main(message: Message, state: FSMContext):
    await show_main_menu(message, state)
# --- –†–∞–∑–¥–µ–ª –û—Ç–∑—ã–≤–æ–≤ ---
@dp.message(F.text == "‚úâÔ∏è –†–∞–∑–¥–µ–ª –û—Ç–∑—ã–≤–æ–≤")
async def review_section(message: Message, state: FSMContext):
    await state.clear()
    try:
        photo = FSInputFile("reviews.jpg")
        await message.answer_photo(
            photo=photo,
            caption="""
üåä <b>üåôÔπí‚ÇäÀö‚úß –£–≥–æ–ª–æ–∫ –û—Ç–≥–æ–ª–æ—Å–∫–æ–≤ ‚úßÀö‚ÇäÔπíüåô \n
ñ¶π –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Ç—ë–ø–ª—ã—Ö —Å–ª–æ–≤ –∏ —á–µ—Å—Ç–Ω—ã—Ö —á—É–≤—Å—Ç–≤ ñ¶π</b>

‚ï≠‚îÄ‚îÄ ‚ãÜÀô‚äπÀö ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
‚ú¶ –•–æ—á–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è, –∫–∞–∫ —Ç–µ–±–µ –∑–¥–µ—Å—å?
‚ú¶ –û—Å—Ç–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ ‚Äî –¥–ª—è –Ω–∞—Å —ç—Ç–æ –≤–∞–∂–Ω–æ.
‚ú¶ –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—á–∏—Ç–∞–π, —á—Ç–æ –ø–∏—à—É—Ç –¥—Ä—É–≥–∏–µ –ø—É—Ç–Ω–∏–∫–∏.
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ \n \n

üìñ –û—Ç–∑—ã–≤—ã –ê–ª—å—è–Ω—Å–∞ —Å–æ–±—Ä–∞–Ω—ã –∑–¥–µ—Å—å:
[‚ü° –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏—Å—Ç–∞–Ω–∏—â–µ ‚ü°] \n \n

ìÜ©‚ô°ìÜ™ –ë–µ–∑ —Å–ø–µ—à–∫–∏. –ë–µ–∑ –æ–∂–∏–¥–∞–Ω–∏–π.
–¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å  –∏–ª–∏ —Å–∫–∞–∑–∞—Ç—å –≤—Å–ª—É—Ö. \n \n

‚ü° –í—ã–±–∏—Ä–∞–π –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏ –æ—Å—Ç–∞–≤—å –æ—Ç–≥–æ–ª–æ—Å–æ–∫.
–ù–µ–±–æ–ª—å—à–æ–π —à–µ–ø–æ—Ç, —Ç–æ–∂–µ —á–∞—Å—Ç—å –ª–µ–≥–µ–Ω–¥—ã.
""",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="leave_review")],
                    [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ]
            )
        )
    except:
        await message.answer("(reviews.jpg –Ω–µ –Ω–∞–π–¥–µ–Ω)")

@dp.callback_query(F.data == "leave_review")
async def ask_review(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Feedback.waiting_for_text)
    await callback.message.answer("üìù –ù–∞–ø–∏—à–∏ —Å–≤–æ–π —Ç—ë–ø–ª—ã–π –æ—Ç–∫–ª–∏–∫:\n\n‚Äî –æ—Ç 20 –¥–æ 120 —Å–∏–º–≤–æ–ª–æ–≤\n‚Äî –Ω–∞—á–∏–Ω–∞–π —Å #–∏–º—è_–∞–¥–º–∏–Ω–∞")

@dp.message(Feedback.waiting_for_text)
async def receive_review(message: Message, state: FSMContext):
    text = message.text.strip()
    if len(text) < 20 or len(text) > 120 or not text.startswith("#"):
        return await message.answer("‚ùå –û—Ç–∑—ã–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 50 –¥–æ 120 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å #–∏–º—è_–∞–¥–º–∏–Ω–∞.")

    await bot.send_message(
        chat_id=REVIEWS_CHANNEL,
        text=f"üí¨ <b>–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤:</b>\n\n{text}\n\nüßæ –û—Ç: @{message.from_user.username or '–ë–µ–∑ –Ω–∏–∫–∞'}"
    )
    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –¢–≤–æ–π –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    await state.clear()
    await show_main_menu(message, state)

@dp.callback_query(F.data == "back_to_main")
async def back_from_reviews(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.delete()
    await show_main_menu(callback.message, state)
# --- –ê–Ω–∫–µ—Ç–∞ "–°—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º" ---
@dp.message(F.text == "üéüÔ∏è –°—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º")
async def start_admin_form(message: Message, state: FSMContext):
    await state.clear()
    await state.set_state(AdminForm.username)
    await message.answer("üïäÔ∏èÀö‚Çä‚Äß ‚ü° –ó–∞—è–≤–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—É –ê–ª—å—è–Ω—Å–∞ ‚ü° ‚Äß‚ÇäÀöüåå \n –ß—É–≤—Å—Ç–≤—É–µ—à—å –≤ —Å–µ–±–µ –∂–µ–ª–∞–Ω–∏–µ –ø–æ–º–æ–≥–∞—Ç—å? \n –•–æ—á–µ—à—å –±—ã—Ç—å —Ç–µ–º, –∫—Ç–æ —Å–æ–∑–¥–∞—ë—Ç —É—é—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–≤–µ—Ç–æ–º? \n \n ñ¶π –ï—Å–ª–∏ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è ‚Äî –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ. \n –ë–µ–∑ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è, –±–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è ‚Äî –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É. \n \n –ö–æ–º–∞–Ω–¥–∞ –ê–ª—å—è–Ω—Å–∞ –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è —Ç–µ—Ö, \n –∫—Ç–æ —Ö–æ—á–µ—Ç –±—ã—Ç—å —á–∞—Å—Ç—å—é —á–µ–≥–æ-—Ç–æ –¥–æ–±—Ä–æ–≥–æ –∏ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ. \n \n  ÀóÀèÀã ü§ç ÀéÀäÀó \n –¢—ã –Ω–µ –æ–±—è–∑–∞–Ω –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–º. \n –í–∞–∂–Ω–æ ‚Äî –±—ã—Ç—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–º.. \n –°–∫–∞–∂–∏ –Ω–∞–º –∫–∞–∫–æ–π —É —Ç–µ–±—è username?", reply_markup=cancel_kb())

@dp.message(AdminForm.username)
async def admin_get_username(message: Message, state: FSMContext):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_admin_form_msg(message, state)
    await state.update_data(username=message.text)
    await state.set_state(AdminForm.age)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?", reply_markup=cancel_kb())

@dp.message(AdminForm.age)
async def admin_get_age(message: Message, state: FSMContext):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_admin_form_msg(message, state)
    await state.update_data(age=message.text)
    await message.answer("‚è±Ô∏è –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç—ã –≥–æ—Ç–æ–≤ —É–¥–µ–ª—è—Ç—å?", reply_markup=InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="1‚Äì2 —á–∞—Å–∞", callback_data="time_1_2"),
             InlineKeyboardButton(text="3‚Äì4 —á–∞—Å–∞", callback_data="time_3_4")],
            [InlineKeyboardButton(text="5‚Äì6 —á–∞—Å–æ–≤", callback_data="time_5_6"),
             InlineKeyboardButton(text="6+ —á–∞—Å–æ–≤", callback_data="time_6_plus")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_admin_form")]
        ]
    ))

@dp.callback_query(F.data == "cancel_admin_form")
async def cancel_admin(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.delete()
    await callback.message.answer("üö´ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    await show_main_menu(callback.message, state)

async def cancel_admin_form_msg(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("üö´ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    await show_main_menu(message, state)

def cancel_kb():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]],
        resize_keyboard=True
    )
@dp.callback_query(F.data.startswith("time_"))
async def admin_time(callback: CallbackQuery, state: FSMContext):
    time_map = {
        "time_1_2": "1‚Äì2 —á–∞—Å–∞", "time_3_4": "3‚Äì4 —á–∞—Å–∞",
        "time_5_6": "5‚Äì6 —á–∞—Å–æ–≤", "time_6_plus": "6+ —á–∞—Å–æ–≤"
    }
    await state.update_data(time_commitment=time_map[callback.data])
    await callback.message.answer("üåç –í—ã–±–µ—Ä–∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:", reply_markup=InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ê–∑–∏—è", callback_data="tz_asia"),
             InlineKeyboardButton(text="–†–æ—Å—Å–∏—è", callback_data="tz_russia")],
            [InlineKeyboardButton(text="–£–∫—Ä–∞–∏–Ω–∞", callback_data="tz_ukraine"),
             InlineKeyboardButton(text="–ï–≤—Ä–æ–ø–∞", callback_data="tz_europe")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_admin_form")]
        ]
    ))
    await state.set_state(AdminForm.timezone)

@dp.callback_query(F.data.startswith("tz_"))
async def admin_tz(callback: CallbackQuery, state: FSMContext):
    tz_map = {
        "tz_asia": "–ê–∑–∏—è", "tz_russia": "–†–æ—Å—Å–∏—è",
        "tz_ukraine": "–£–∫—Ä–∞–∏–Ω–∞", "tz_europe": "–ï–≤—Ä–æ–ø–∞"
    }
    await state.update_data(timezone=tz_map[callback.data])
    await callback.message.delete()
    await state.set_state(AdminForm.experience)
    await callback.message.answer("üß∞ –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∞–¥–º–∏–Ω—Å–∫–∏–π –æ–ø—ã—Ç?", reply_markup=cancel_kb())

@dp.message(AdminForm.experience)
async def step_exp(message: Message, state: FSMContext):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_admin_form_msg(message, state)
    await state.update_data(experience=message.text)
    await state.set_state(AdminForm.motivation)
    await message.answer("üí° –ü–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º?", reply_markup=cancel_kb())

@dp.message(AdminForm.motivation)
async def step_mot(message: Message, state: FSMContext):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_admin_form_msg(message, state)
    await state.update_data(motivation=message.text)
    await state.set_state(AdminForm.conflict)
    await message.answer("üõ† –ö–∞–∫ —Ç—ã –æ—Ç–≤–µ—Ç–∏—à—å –Ω–∞ —Ç–∞–∫–æ–π —Ç–µ–∫—Å—Ç? –ü—Ä–∏–≤–µ—Ç‚Ä¶ –º–Ω–µ —Å–µ–π—á–∞—Å –ø—Ä–∞–≤–¥–∞ –æ—á–µ–Ω—å —Ç—è–∂–µ–ª–æ. –°–µ–≥–æ–¥–Ω—è —É—Ç—Ä–æ–º –º–æ—è –ª—É—á—à–∞—è –ø–æ–¥—Ä—É–≥–∞‚Ä¶ –æ–Ω–∞ —É—à–ª–∞. –ò —ç—Ç–æ –∫–∞–∫ –±—É–¥—Ç–æ –≤—ã—Ä–≤–∞–ª–æ –∫—É—Å–æ–∫ –∏–∑ –º–µ–Ω—è. –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –∫–∞–∫ —Ç–∞–∫–æ–µ –≤–æ–æ–±—â–µ –º–æ–≥–ª–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏, –∫–∞–∫ –æ–Ω–∞ –º–æ–≥–ª–∞ –æ—Å—Ç–∞–≤–∏—Ç—å –º–µ–Ω—è. –Ø –±—É–¥—Ç–æ —Å—Ö–æ–∂—É —Å —É–º–∞. –ü—Ä–æ—à–ª–æ –≤—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤, –∞ —è —É–∂–µ —Å–ª—ã—à—É –µ—ë –≥–æ–ª–æ—Å, –∫–∞–∫ –±—É–¥—Ç–æ –æ–Ω–∞ –≥–æ–≤–æ—Ä–∏—Ç —Å–æ –º–Ω–æ–π‚Ä¶ –ø—Ä–æ—Å–∏—Ç –º–µ–Ω—è –ø–æ–π—Ç–∏ –∑–∞ –Ω–µ–π. –≠—Ç–æ –ø—É–≥–∞–µ—Ç. –Ø –Ω–µ —Ö–æ—á—É —É–º–∏—Ä–∞—Ç—å. –ü—Ä–∞–≤–¥–∞ –Ω–µ —Ö–æ—á—É. –ù–æ –≤–Ω—É—Ç—Ä–∏ –≤—Å—ë –∫–∞–∫ –±—É–¥—Ç–æ –∫—Ä–∏—á–∏—Ç, –¥–∞–≤–∏—Ç, –ª–æ–º–∞–µ—Ç. –Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è. –Ø –Ω–µ —Ö–æ—á—É –¥–µ–ª–∞—Ç—å –≥–ª—É–ø–æ—Å—Ç–µ–π, –Ω–æ –≤—Å—ë –±—É–¥—Ç–æ —Ç–æ–ª–∫–∞–µ—Ç –º–µ–Ω—è –Ω–∞ –∫—Ä–∞–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ—Å—Ç–æ –ø–æ–±—É–¥—å —Å–æ –º–Ω–æ–π. –ú–Ω–µ –æ—á–µ–Ω—å –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –∫—Ç–æ-—Ç–æ –ø–æ–Ω—è–ª, —É—Å–ª—ã—à–∞–ª, –ø—Ä–æ—Å—Ç–æ –±—ã–ª —Ä—è–¥–æ–º.", reply_markup=cancel_kb())

@dp.message(AdminForm.conflict)
async def step_conflict(message: Message, state: FSMContext):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_admin_form_msg(message, state)
    await state.update_data(conflict=message.text)
    await state.set_state(AdminForm.ideas)
    await message.answer("üìà –ö–∞–∫–∏–µ —É —Ç–µ–±—è –∏–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞?", reply_markup=cancel_kb())

@dp.message(AdminForm.ideas)
async def step_ideas(message: Message, state: FSMContext):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_admin_form_msg(message, state)
    await state.update_data(ideas=message.text)
    await state.set_state(AdminForm.strengths)
    await message.answer("üèÜ –ù–∞–∑–æ–≤–∏ —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã", reply_markup=cancel_kb())

@dp.message(AdminForm.strengths)
async def step_final(message: Message, state: FSMContext):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_admin_form_msg(message, state)

    await state.update_data(strengths=message.text)
    data = await state.get_data()

    text = (
        "<b>üì® –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞</b>\n\n"
        f"üë§ Username: @{data['username']}\n"
        f"üî¢ –í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
        f"‚è± –í—Ä–µ–º—è: {data['time_commitment']}\n"
        f"üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {data['timezone']}\n"
        f"üß∞ –û–ø—ã—Ç: {data['experience']}\n"
        f"üí° –ú–æ—Ç–∏–≤–∞—Ü–∏—è: {data['motivation']}\n"
        f"üõ† –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã: {data['conflict']}\n"
        f"üìà –ò–¥–µ–∏: {data['ideas']}\n"
        f"üèÜ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: {data['strengths']}"
    )

    try:
        await bot.send_message(ADMINS_CHANNEL, text)
        await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –ø–æ—Å–ª–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è.")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã: {e}")

    await state.clear()
    await show_main_menu(message, state)

# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞ ---
class ChatStates(StatesGroup):
    chatting = State()

# --- –û–±—â–µ–Ω–∏–µ —Å –ê–ª—å—è–Ω—Å–æ–º (–ø–µ—Ä–µ–ø–∏—Å–∫–∞) ---
@dp.message(F.text == "üåê –û–±—â–∞—Ç—å—Å—è —Å –ê–ª—å—è–Ω—Å–æ–º")
async def start_chat(message: Message, state: FSMContext):
    await state.set_state(ChatStates.chatting)
    await message.answer(
        "üí¨ –ú–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –ø–∏—Å–∞—Ç—å —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥–µ –ê–ª—å—è–Ω—Å–∞. –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–º —Ç–µ–±–µ –∑–¥–µ—Å—å."
        "\n\n‚ùå –ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å —á–∞—Ç ‚Äî –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /stop"
    )

@dp.message(StateFilter(ChatStates.chatting))
async def chatting_handler(message: Message, state: FSMContext):
    if message.text.lower() == "/stop":
        await state.clear()
        await message.answer("‚ùå –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É üåê –û–±—â–∞—Ç—å—Å—è —Å –ê–ª—å—è–Ω—Å–æ–º.")
        await show_main_menu(message, state)
        return

    user = message.from_user
    text = message.text
    forwarded = await bot.send_message(
        chat_id=SUPPORT_GROUP_ID,
        text=(
            f"üì• –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç <b>@{user.username or user.first_name}</b> (ID: <code>{user.id}</code>):\n\n"
            f"{text}"
        ),
        parse_mode="HTML"
    )
    user_message_map[forwarded.message_id] = user.id
    await message.answer("‚úÖ –¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ñ–¥–∏ –æ—Ç–≤–µ—Ç–∞.")

# --- –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞ (–≤ –≥—Ä—É–ø–ø–µ) ---
@dp.message()
async def admin_reply_handler(message: Message):
    if not message.reply_to_message:
        return

    original_msg_id = message.reply_to_message.message_id
    user_id = user_message_map.get(original_msg_id)

    if not user_id:
        return

    try:
        await bot.send_message(chat_id=user_id, text=f"üì© –û—Ç–≤–µ—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã –ê–ª—å—è–Ω—Å–∞:\n\n{message.text}")
        await message.answer("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
@dp.message()
async def handle_msg(message: Message):
    await message.answer("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")

# "–§–µ–π–∫–æ–≤—ã–π" HTTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
async def handle(request):
    return web.Response(text="Bot is running on Render!")

async def run_web_server():
    app = web.Application()
    app.add_routes([web.get("/", handle)])
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, host="0.0.0.0", port=PORT)
    await site.start()
    print(f"HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")

async def main():
    await asyncio.gather(
        dp.start_polling(bot),
        run_web_server()  # –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–µ–π–∫–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ–±—ã Render –Ω–µ –æ—Ç–∫–ª—é—á–∏–ª
    )

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        print("–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
